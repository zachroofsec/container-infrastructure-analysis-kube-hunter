# Least restrictive Pod Security Policy
# (Same as not having one)
# https://kubernetes.io/docs/concepts/policy/pod-security-policy/#example-policies
#apiVersion: policy/v1beta1
#kind: PodSecurityPolicy
#metadata:
#  name: default
#  annotations:
#    seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
#spec:
#  privileged: true
#  allowPrivilegeEscalation: true
#  allowedCapabilities:
#  - '*'
#  volumes:
#  - '*'
#  hostNetwork: true
#  hostPorts:
#  - min: 0
#    max: 65535
#  hostIPC: true
#  hostPID: true
#  runAsUser:
#    rule: 'RunAsAny'
#  seLinux:
#    rule: 'RunAsAny'
#  supplementalGroups:
#    rule: 'RunAsAny'
#  fsGroup:
#    rule: 'RunAsAny'
#---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: psp:default
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs:     ['use']
  resourceNames:
  - default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: psp:default
roleRef:
  kind: ClusterRole
  name: psp:default
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: Group
  apiGroup: rbac.authorization.k8s.io
  name: system:serviceaccounts
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: default
spec:
  allowedHostPaths:
  - pathPrefix: /
    readOnly: true
  fsGroup:
    rule: RunAsAny
  hostPorts:
  - max: 0
    min: 0
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - hostPath
  - secret

